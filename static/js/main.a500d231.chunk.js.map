{"version":3,"sources":["Header.js","Aside.js","userlist.js","userprofile.js","Content.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Navbar","expand","variant","bg","Brand","href","alt","Col","sm","style","textAlign","color","Aside","to","Userlist","props","useState","userDetails","userUpdate","history","useHistory","useEffect","udata","userData","handleEdit","e","id","preventDefault","handleuserProfile","push","Table","striped","bordered","hover","size","map","userD","key","onClick","first_name","last_name","email","Image","width","src","avatar","thumbnail","Button","Alert","Userprofile","uData","uDataUpdate","pdata","userID","Form","onSubmit","form","target","submitValue","handleSubmit","Group","controlId","Label","Control","type","defaultValue","Content","data","setData","uid","setUid","axios","get","then","repos","allRepos","display","path","formdata","i","findIndex","element","value","results","filter","obj","length","eObj","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"qQAgBeA,MAbf,WACI,OACI,yBAAKC,UAAU,UACX,kBAACC,EAAA,EAAD,CAAQC,OAAO,KAAKC,QAAQ,QAAQC,GAAG,QACnC,kBAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,KAAI,yBAAKC,IAAI,UAChC,kBAACN,EAAA,EAAOI,MAAR,CAAcC,KAAK,IAAIN,UAAU,cAAjC,QACA,kBAACQ,EAAA,EAAD,CAAKC,GAAI,GAAIC,MAAO,CAACC,UAAU,QAASC,MAAM,YAA9C,eC+BDC,MA5Bf,WACI,OACI,6BACI,kBAACL,EAAA,EAAD,CAAKR,UAAU,mCAAmCS,GAAI,EAAGC,MAAO,CAACC,UAAU,SAC3E,kBAAC,IAAD,KACI,6BACI,wBAAIX,UAAU,aACV,4BACA,kBAAC,IAAD,CAAMc,GAAG,SAAT,SAEA,4BACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,UAEA,4BACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,kB,sEC6BTC,MAjDf,SAAkBC,GAAO,IAAD,EACYC,qBADZ,mBACbC,EADa,KACAC,EADA,KAEhBC,EAAUC,cAEdC,qBAAU,WACN,IAAMC,EAAQP,EAAMQ,SACpBL,EAAWI,KACR,CAACP,EAAMQ,SAAUN,IAGxB,IAAMO,EAAW,SAACC,EAAGC,GACjBD,EAAEE,iBACFZ,EAAMa,kBAAkBF,GACxBP,EAAQU,KAAK,iBAGb,OAAIZ,EAMA,kBAACa,EAAA,EAAD,CAAO/B,UAAU,YAAYgC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,KAAK,MACzD,+BACE,4BACE,0CACA,yCACA,sCACA,sCACA,sCAGJ,+BACGjB,EAAYkB,KAAI,SAACC,GAAD,OAAS,wBAAIC,IAAKD,EAAMV,IACrC,4BAAI,uBAAGY,QAAS,SAAAb,GAAC,OAAED,EAAWC,EAAEW,EAAMV,MAAMU,EAAMG,aAClD,4BAAKH,EAAMI,WACX,4BAAKJ,EAAMK,OACX,4BAAI,kBAACC,EAAA,EAAD,CAAOjC,MAAO,CAACkC,MAAM,OAAQrC,IAAI,SAASsC,IAAKR,EAAMS,OAAQC,WAAS,KAC1E,4BAAI,uBAAGR,QAAS,SAAAb,GAAC,OAAED,EAAWC,EAAEW,EAAMV,MAClC,kBAACqB,EAAA,EAAD,CAAQ7C,QAAQ,aAAhB,gBAtBH,kBAAC8C,EAAA,EAAD,CAAOrC,MAAM,QAAb,gB,QCuCJsC,MAxDf,SAAqBlC,GAAO,IAAD,EACIC,qBADJ,mBAChBkC,EADgB,KACTC,EADS,KAEnBhC,EAAUC,cAcd,OAZAC,qBAAU,WACN,IAAM+B,EAAQrC,EAAMsC,OACpBF,EAAYC,KACT,CAACrC,EAAMsC,OAAQH,IASlBA,EAQG,6BACI,kBAACI,EAAA,EAAD,CAAMC,SAAU,SAAA9B,GAAC,OAhBL,SAACA,GAChBA,EAAEE,iBACF,IAAM6B,EAAO/B,EAAEgC,OACf1C,EAAM2C,YAAYF,EAAMN,EAAMxB,IAC9BP,EAAQU,KAAK,KAYS8B,CAAalC,IAAI1B,UAAU,YAC9C,8BAAUA,UAAU,oBAChB,4BAAQA,UAAU,oBAAlB,aACC,kBAACuD,EAAA,EAAKM,MAAN,CAAYC,UAAU,iBAClB,kBAACP,EAAA,EAAKQ,MAAN,mBACA,kBAACR,EAAA,EAAKS,QAAN,CAAchE,UAAU,SAASiE,KAAK,OAAOC,aAAcf,EAAMX,cAGrE,kBAACe,EAAA,EAAKM,MAAN,CAAYC,UAAU,gBAClB,kBAACP,EAAA,EAAKQ,MAAN,kBACA,kBAACR,EAAA,EAAKS,QAAN,CAAcC,KAAK,OAAOC,aAAcf,EAAMV,aAGlD,kBAACc,EAAA,EAAKM,MAAN,CAAYC,UAAU,aAClB,kBAACP,EAAA,EAAKQ,MAAN,cACA,kBAACR,EAAA,EAAKS,QAAN,CAAcC,KAAK,QAAQC,aAAcf,EAAMT,SAGnD,kBAACM,EAAA,EAAD,CAAQ7C,QAAQ,UAAU8D,KAAK,UAA/B,aAzBR,kBAAChB,EAAA,EAAD,CAAOrC,MAAM,QAAb,kCC6DGuD,MAxEf,WAAmB,IAAD,EACUlD,mBAAS,IADnB,mBACPmD,EADO,KACDC,EADC,OAEQpD,mBAAS,IAFjB,mBAEPqD,EAFO,KAEFC,EAFE,KAyCd,OApCAjD,qBAAU,WAERkD,IAAMC,IADO,sCACKC,MAAK,SAACC,GACtB,IAAMC,EAAWD,EAAMP,KACvBC,EAAQO,EAASR,WAElB,IA+BC,yBAAK1D,MAAO,CAACmE,QAAQ,WACzB,kBAAC,IAAD,KACE,6BACE,6BACE,wBAAI7E,UAAU,QACZ,4BACE,kBAAC,IAAD,CAAMc,GAAG,KAAI,kBAACkC,EAAA,EAAD,oBAEf,4BACE,kBAAC,IAAD,CAAMlC,GAAG,gBAAe,kBAACkC,EAAA,EAAD,yBAQ9B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8B,KAAK,gBACV,kBAAC,EAAD,CAAaxB,OAAQgB,EAAKX,YAnClC,SAAqBoB,EAAUpD,GAI7B,IAAK,IAAIqD,KAFUZ,EAAKa,WADL,SAACC,GAAD,OAAaA,EAAQvD,IAAMA,KAGhCyC,EACZ,GAAIA,EAAKY,GAAGrD,IAAMA,EAAI,CACnByC,EAAKY,GAAGxC,WAAauC,EAAS,GAAGI,MACjCf,EAAKY,GAAGvC,UAAYsC,EAAS,GAAGI,MAChCf,EAAKY,GAAGtC,MAAQqC,EAAS,GAAGI,MAC5B,WA4BD,kBAAC,IAAD,CAAOL,KAAK,KACV,kBAAC,EAAD,CAAUtD,SAAU4C,EAAMvC,kBAnDlC,SAA2BF,GAEvB,IADF,IAAIyD,EAAUhB,EAAKiB,QAAO,SAASC,GAAO,OAAOA,EAAI3D,IAAMA,KAChDqD,EAAI,EAAGA,EAAII,EAAQG,OAAQP,IAAI,CACtC,IAAMQ,EAAO,CAAC7D,GAAGyD,EAAQJ,GAAGrD,GAChBe,MAAO0C,EAAQJ,GAAGtC,MAClBF,WAAW4C,EAAQJ,GAAGxC,WACtBC,UAAW2C,EAAQJ,GAAGvC,UACtBK,OAAQsC,EAAQJ,GAAGlC,QAE/ByB,EAAOiB,aCjBFC,MAZf,WACE,OACE,yBAAKzF,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCc0F,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCLNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3B,MAAK,SAAA4B,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.a500d231.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Col, Navbar } from 'react-bootstrap';\r\n\r\nfunction Header(){\r\n    return(\r\n        <div className=\"header\">\r\n            <Navbar expand=\"lg\" variant=\"light\" bg=\"dark\">\r\n                <Navbar.Brand href=\"#\"><img alt=\"Logo\"/></Navbar.Brand>\r\n                <Navbar.Brand href=\"#\" className=\"text-white\">Logo</Navbar.Brand>\r\n                <Col sm={11} style={{textAlign:\"right\", color:\"#FFFFFF\"}}>\r\n                            Username\r\n                        </Col>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}\r\nexport default Header;\r\n\r\n","import React from 'react';\r\nimport { Col, Nav } from 'react-bootstrap';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n  import Home from './Home';\r\n  import About from './about';\r\n  import Contact from './contact';\r\n\r\nfunction Aside(){\r\n    return(\r\n        <div>\r\n            <Col className=\"float-left bg-secondary asideBar\" sm={1} style={{textAlign:\"left\"}}>\r\n            <Router>\r\n                <div>\r\n                    <ul className=\"asideMenu\">\r\n                        <li>\r\n                        <Link to=\"/home\">Home</Link>\r\n                        </li>\r\n                        <li>\r\n                        <Link to=\"/About\">About</Link>\r\n                        </li>\r\n                        <li>\r\n                        <Link to=\"/Contact\">Contact</Link>\r\n                        </li>\r\n                        \r\n                    </ul>\r\n\r\n                    {/* A <Switch> looks through its children <Route>s and\r\n                        renders the first one that matches the current URL. */}\r\n                    \r\n                </div>\r\n            </Router>\r\n            </Col>\r\n        </div>\r\n    );\r\n}\r\nexport default Aside;","import React,{useState, useEffect} from 'react';\r\nimport { Jumbotron, Table, Image, Button } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Alert } from 'reactstrap';\r\nimport './App.css';\r\n\r\nfunction Userlist(props){\r\n    const [userDetails, userUpdate]=useState();\r\n    let history = useHistory();\r\n    \r\n    useEffect(() => {\r\n        const udata = props.userData;\r\n        userUpdate(udata);\r\n        }, [props.userData, userDetails]);\r\n\r\n\r\n    const handleEdit=(e, id)=>{\r\n        e.preventDefault();\r\n        props.handleuserProfile(id);\r\n        history.push('/Userprofile');\r\n    }\r\n        \r\n        if(!userDetails){\r\n            return(<Alert color=\"info\">\r\n            Loading....\r\n        </Alert>)\r\n        } else {\r\n        return(\r\n            <Table className=\"listTable\" striped bordered hover size=\"sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>First name</th>\r\n                <th>Last name</th>\r\n                <th>E-mail</th>\r\n                <th>Avatar</th>\r\n                <th>Edit</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {userDetails.map((userD)=><tr key={userD.id}>\r\n                  <td><a onClick={e=>handleEdit(e,userD.id)}>{userD.first_name}</a></td>\r\n                  <td>{userD.last_name}</td>\r\n                  <td>{userD.email}</td>\r\n                  <td><Image style={{width:\"25%\"}} alt=\"avatar\" src={userD.avatar} thumbnail /></td>\r\n                  <td><a onClick={e=>handleEdit(e,userD.id)}>\r\n                      <Button variant=\"secondary\">\r\n                      Edit\r\n                      </Button>\r\n                      </a></td>\r\n                  </tr>)}\r\n            </tbody>\r\n          </Table>\r\n          )}\r\n    \r\n}\r\nexport default Userlist;","import React,{useState, useEffect} from 'react';\r\nimport { Jumbotron, Form, Button } from 'react-bootstrap';\r\nimport { Alert } from 'reactstrap';\r\nimport { useHistory } from 'react-router-dom'\r\nimport './App.css';\r\n\r\nfunction Userprofile(props){\r\n    const [uData, uDataUpdate]=useState();\r\n    let history = useHistory();\r\n    \r\n    useEffect(() => {\r\n        const pdata = props.userID;\r\n        uDataUpdate(pdata);\r\n        }, [props.userID, uData]);\r\n    \r\n        const handleSubmit=(e)=>{\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            props.submitValue(form, uData.id);\r\n            history.push('/');\r\n        }\r\n    \r\n    if(!uData){\r\n        return(\r\n            <Alert color=\"info\">\r\n                Select User from UserList....\r\n            </Alert>\r\n        )\r\n    } else {\r\n        return(\r\n           <div>\r\n               <Form onSubmit={e=>handleSubmit(e)} className=\"editForm\">\r\n               <fieldset className=\"scheduler-border\">\r\n                   <legend className=\"scheduler-border\" >Edit User</legend>\r\n                    <Form.Group controlId=\"formFirstName\">\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control className=\"finput\" type=\"text\" defaultValue={uData.first_name} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formLastName\">\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control type=\"text\" defaultValue={uData.last_name} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formEmail\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" defaultValue={uData.email} />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\" >\r\n                        Update\r\n                    </Button>\r\n                    </fieldset>\r\n                </Form>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    \r\n}\r\nexport default Userprofile;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { Button } from 'react-bootstrap';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n  import Userlist from './userlist';\r\n  import Userprofile from './userprofile';\r\n  \r\n\r\nfunction Content(){\r\n    const [data, setData] = useState('');\r\n    const [uid, setUid] = useState('');\r\n    //let history = useHistory();\r\n\r\n    useEffect(() => {\r\n    const apiUrl = 'https://reqres.in/api/users?page=2';\r\n      axios.get(apiUrl).then((repos) => {\r\n        const allRepos = repos.data;\r\n        setData(allRepos.data);\r\n      });\r\n    }, []);\r\n\r\n    function handleuserProfile(id){\r\n      var results = data.filter(function(obj) { return obj.id == id; });\r\n        for (var i = 0; i < results.length; i++){\r\n          const eObj = {id:results[i].id, \r\n                      email: results[i].email, \r\n                      first_name:results[i].first_name,\r\n                      last_name: results[i].last_name,\r\n                      avatar: results[i].avatar\r\n                    };\r\n          setUid(eObj);\r\n        }\r\n    }\r\n\r\n    function submitValue(formdata, id){\r\n      const arrayIndex = (element) => element.id == id;\r\n      const indexArray = data.findIndex(arrayIndex);\r\n\r\n      for (var i in data) {\r\n        if (data[i].id == id) {\r\n           data[i].first_name = formdata[1].value;\r\n           data[i].last_name = formdata[2].value;\r\n           data[i].email = formdata[3].value;\r\n           break; //Stop this loop, we found it!\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    return(\r\n        <div style={{display:\"inline\"}}>\r\n    <Router>\r\n      <div>\r\n        <nav>\r\n          <ul className=\"Tabs\">\r\n            <li>\r\n              <Link to=\"/\"><Button>User List</Button></Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/Userprofile\"><Button>User Profile</Button></Link>\r\n            </li>\r\n            \r\n          </ul>\r\n        </nav>\r\n\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/Userprofile\">\r\n            <Userprofile userID={uid} submitValue={submitValue} />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Userlist userData={data} handleuserProfile={handleuserProfile} />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n        </div>\r\n    );\r\n}\r\nexport default Content;","import React from 'react';\nimport Header from './Header';\nimport Aside from './Aside';\nimport Content from './Content';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Aside />\n      <Header />\n      <Content />\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <Router >\n    <App />\n    </Router >,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}